class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        size = len(graph)
        groups = {}
        g = collections.defaultdict(set)
        initial = set(initial)

        for row in range(size):
            for col in range(size):
                if graph[row][col]:
                    g[row].add(col)
                    g[col].add(row)

        record = [set() for _ in range(size)]
        Cnter = collections.Counter()

        for node in initial:
            Cnter[node] = 1
            stack = collections.deque()
            visited = set()
            stack.append(node)
            visited.add(node)
            record[node].add(node)
            while stack:
                cur = stack.pop()
                for nxt in g[cur]:
                    if nxt not in visited:
                        if nxt not in initial:
                            stack.append(nxt)
                            visited.add(nxt)
                        record[nxt].add(node)

        max_value = -1
        max_node = -1

        for key in range(size):
            if len(record[key]) == 1:
                src = record[key].pop()
                if src != key:
                    Cnter[src] += 1

        for key in Cnter:
            if Cnter[key] > max_value:
                max_value = Cnter[key]
                max_node = key
            elif Cnter[key] == max_value:
                max_node = min(key, max_node)

        return max_node
