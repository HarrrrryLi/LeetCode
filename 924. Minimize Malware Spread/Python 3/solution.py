class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        record = {}

        initial_set = set(initial)

        for start_node in initial:
            record[start_node] = self.DFS(graph, initial_set, start_node)

        max_nodes = 0
        max_index = len(graph)
        for key in record:
            if record[key] > max_nodes:
                max_nodes = record[key]
                max_index = key
            elif record[key] == max_nodes:
                max_index = min(key, max_index)
        return max_index

    def DFS(self, graph, initial_set, start_node):
        stack = collections.deque()
        visited = set()
        result = 1
        stack.append(start_node)
        visited.add(start_node)
        while stack:
            node = stack.pop()
            for nxt, status in enumerate(graph[node]):
                if not status:
                    continue
                if nxt in visited:
                    continue
                if nxt in initial_set:
                    return 0

                visited.add(nxt)
                stack.append(nxt)
                result += 1
        return result
